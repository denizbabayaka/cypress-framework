{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-18T15:24:56.710Z",
    "end": "2022-04-18T15:25:02.916Z",
    "duration": 6206,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cc16ecb7-7205-43ed-88bc-06ca473e84b1",
      "title": "",
      "fullFile": "cypress/integration/automation-test-store/alias-invoke.js",
      "file": "cypress/integration/automation-test-store/alias-invoke.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3c02cd82-8da1-4803-bbaf-18cf38b9295b",
          "title": "Alias and invoke",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate total of normal and sale products ",
              "fullTitle": "Alias and invoke Calculate total of normal and sale products ",
              "timedOut": null,
              "duration": 3494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get('.thumbnail').as('Thumbnail'); // iterate all the @Thumbnail elements and find the elements with class name .oneprice \n// assign them to the variable $el and get the index number of the elements\n// cy.get('@Thumbnail').find('.oneprice').each(($el, index, $list) => {\n//     cy.log($el.text())\n//invoke command extract the text of the elements and assign it to the variable as itemPrice\n// those are chained commands \ncy.get('.thumbnail').find('.oneprice').invoke('text').as('itemPrice');\ncy.get('.thumbnail').find('.pricenew').invoke('text').as('saleItemPrice');\nvar itemsTotal = 0; // here then command is used to get the text of the variable itemPrice and assign it to the variable linkText\ncy.get('@itemPrice').then($linkText => {\n  var itemPriceTotal = 0; // when it sees a $ sybmol it split remove it and print the rest of the text\n  var itemPrice = $linkText.split('$');\n  var i;\n  for (i = 0; i < itemPrice.length; i++) {\n    cy.log(itemPrice[i]); //Number command converts the string to a number and add it to the itemPriceTotal\n    itemPriceTotal += Number(itemPrice[i]);\n  }\n  itemsTotal += itemPriceTotal;\n  cy.log('Total of Pricees is : ' + itemPriceTotal);\n}); //Extract the item of each sale item and add them to the saleItemTotal\ncy.get('@saleItemPrice').then($linkText => {\n  var saleItemPrice = 0;\n  var saleItemPriceTotal = $linkText.split('$');\n  var i;\n  for (i = 0; i < saleItemPriceTotal.length; i++) {\n    cy.log(saleItemPriceTotal[i]);\n    saleItemPrice += Number(saleItemPriceTotal[i]);\n  }\n  itemsTotal += saleItemPrice;\n  cy.log('Total of Sale Prices is : ' + saleItemPrice);\n}).then(() => {\n  cy.log('Total of all prices is : ' + itemsTotal);\n  expect(itemsTotal).to.equal(648.5);\n});",
              "err": {},
              "uuid": "86476a6c-7ddb-4987-8572-22222182b4a8",
              "parentUUID": "3c02cd82-8da1-4803-bbaf-18cf38b9295b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86476a6c-7ddb-4987-8572-22222182b4a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3494,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}