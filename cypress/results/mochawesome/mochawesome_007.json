{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-18T15:26:04.299Z",
    "end": "2022-04-18T15:26:10.150Z",
    "duration": 5851,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d12d0f76-4555-42da-95fd-a822df8e6435",
      "title": "",
      "fullFile": "cypress/integration/webdriver-uni/autocomplete-dropdown-list.js",
      "file": "cypress/integration/webdriver-uni/autocomplete-dropdown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b71e7aef-e02a-469a-9da5-7541c7a20e2d",
          "title": "Verify Autocomplete dropdown lists via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select specific values via select dropdown list ",
              "fullTitle": "Verify Autocomplete dropdown lists via webdriveruni Select specific values via select dropdown list ",
              "timedOut": null,
              "duration": 3183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com\");\ncy.get('#autocomplete-textfield').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#myInput').type('A'); //This locator will capture all the options in the dropdown list starting with A and\n//assign it to $el variable\ncy.get('#myInputautocomplete-list > *').each(($el, index, $list) => {\n  //This will get all the options in the dropdown list as text \n  const prod = $el.text();\n  const productToSelect = 'Avacado';\n  if (prod === productToSelect) {\n    $el.click();\n    cy.get('#submit-button').click();\n    cy.url().should('include', productToSelect);\n  } // instead of writing a it block we can continue out test with diffrent parameters\n  //by using then actually we can chain the test\n}).then(() => {\n  cy.get('#myInput').type('g'); // this will iterate through the dropdown list through each method \n  // and assign it to $el variable\n  cy.get('#myInputautocomplete-list > *').each(($el, index, $list) => {\n    //This will get all the options in the dropdown list as text \n    const prod = $el.text();\n    const productToSelect = 'Grapes';\n    if (prod === productToSelect) {\n      //click command depriciated with this version of cypress\n      //$el.click();\n      $el.trigger(\"click\");\n      cy.get('#submit-button').click();\n      cy.url().should('include', productToSelect);\n    }\n  });\n});",
              "err": {},
              "uuid": "1bfc82c5-3d67-49f6-9f44-ff57d46e2f20",
              "parentUUID": "b71e7aef-e02a-469a-9da5-7541c7a20e2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1bfc82c5-3d67-49f6-9f44-ff57d46e2f20"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3183,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}