{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-18T15:28:06.999Z",
    "end": "2022-04-18T15:28:14.502Z",
    "duration": 7503,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b8266184-2e13-4aa0-a2df-714b95674b9f",
      "title": "",
      "fullFile": "cypress/integration/webdriver-uni/datepickr.js",
      "file": "cypress/integration/webdriver-uni/datepickr.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a2f5d9ce-89f0-4713-b2f2-4bbc01108985",
          "title": "Test Datepicker via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select date from the datepicker",
              "fullTitle": "Test Datepicker via webdriveruni Select date from the datepicker",
              "timedOut": null,
              "duration": 7482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// let date = new Date();\n// date.setDate(date.getDate());\n// cy.log(date.getDate()) // get current date i.e. 22\n// let date1 = new Date();\n// date1.setDate(date1.getDate() + 5 )\n// cy.log(date1.getDate()) // get current date i.e. 22 + 5 = 27\n// we create an object of date class and assign it to a variable called date\nvar date = new Date();\n/*\nbased on the added day to the current date  our logic will work accordingly\nbasically we create  new date which is 325 days more than current date and compare it \nto current date \n*/\ndate.setDate(date.getDate() + 360); //this will select the year\nvar futureYear = date.getFullYear(); //this will select the month\nvar futureMonth = date.toLocaleString(\"default\", {\n  month: \"long\"\n}); //this will select the day\nvar futureDay = date.getDate();\ncy.log(\"Future year to select: \" + futureYear);\ncy.log(\"Future month to select: \" + futureMonth);\ncy.log(\"Future day to select: \" + futureDay);\nfunction selectMonthandYear() {\n  // this will select the month and year from the datepicker at the first option\n  //and assign it to a variable called currentDate \n  cy.get('.datepicker-dropdown').find('.datepicker-switch').first().then(currentDate => {\n    // it will compare the 2 date variable and if they are not equal \n    //it will go to the next element\n    if (!currentDate.text().includes(futureYear)) {\n      cy.get('.next').first().click(); //this will call our function and it will iterate till finding\n      // correct condition of year \n      selectMonthandYear();\n    }\n  }).then(() => {\n    cy.get('.datepicker-dropdown').find('.datepicker-switch').first().then(currentDate => {\n      // based on the condition it will check the month and iterate till finding\n      if (!currentDate.text().includes(futureMonth)) {\n        cy.get('.next').first().click();\n        selectMonthandYear();\n      }\n    });\n  });\n}\nfunction selectFutureDay() {\n  // this will get all the date body and search for the future day variable \n  // that we created above\n  cy.get('[class=\"day\"]').contains(futureDay).click();\n} //we call the function outside the function  block\n\nselectMonthandYear();\nselectFutureDay();",
              "err": {},
              "uuid": "f633a367-d50c-4add-a889-64907365c0c5",
              "parentUUID": "a2f5d9ce-89f0-4713-b2f2-4bbc01108985",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f633a367-d50c-4add-a889-64907365c0c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7482,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}